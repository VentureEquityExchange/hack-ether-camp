/*global angular*/
/*global Web3*/
'use strict';

angular.module('vexApp')
  .factory('FS', function ($q, $http) {
    // Service logic
    // ...
    var web3 = new Web3(new Web3.providers.HttpProvider("http://ventureequityexchange.on.ether.camp:8555/sandbox/98b2f6cde7ba4f1605e2bc8cc4620e99bf6a193e"));
    
    // Grab contract ABI and Contract Address -> Can we make contact!?
    
    var abi = [
        {
        "constant": true,
        "inputs": [],
        "name": "x",
        "outputs": [
        {
        "name": "",
        "type": "uint256"
        }
        ],
        "type": "function"
        },
        {
        "constant": false,
        "inputs": [
        {
        "name": "value",
        "type": "uint256"
        }
        ],
        "name": "set",
        "outputs": [],
        "type": "function"
        },
        {
        "constant": true,
        "inputs": [
        {
        "name": "",
        "type": "uint256"
        }
        ],
        "name": "entries",
        "outputs": [
        {
        "name": "year",
        "type": "uint256"
        },
        {
        "name": "month",
        "type": "uint256"
        },
        {
        "name": "item",
        "type": "string"
        },
        {
        "name": "amount",
        "type": "uint256"
        },
        {
        "name": "denomination",
        "type": "string"
        },
        {
        "name": "comptroller",
        "type": "address"
        }
        ],
        "type": "function"
        },
        {
        "constant": false,
        "inputs": [
        {
        "name": "_year",
        "type": "uint256"
        },
        {
        "name": "_month",
        "type": "uint256"
        },
        {
        "name": "_item",
        "type": "string"
        },
        {
        "name": "_amount",
        "type": "uint256"
        },
        {
        "name": "_denomination",
        "type": "string"
        }
        ],
        "name": "add",
        "outputs": [],
        "type": "function"
        },
        {
        "constant": false,
        "inputs": [
        {
        "name": "_name",
        "type": "string"
        },
        {
        "name": "_account",
        "type": "address"
        },
        {
        "name": "_role",
        "type": "bytes32"
        },
        {
        "name": "_ownership",
        "type": "uint256"
        }
        ],
        "name": "addDirector",
        "outputs": [],
        "type": "function"
        },
        {
        "constant": true,
        "inputs": [
        {
        "name": "",
        "type": "address"
        }
        ],
        "name": "directors",
        "outputs": [
        {
        "name": "name",
        "type": "string"
        },
        {
        "name": "account",
        "type": "address"
        },
        {
        "name": "role",
        "type": "bytes32"
        },
        {
        "name": "ownership",
        "type": "uint256"
        }
        ],
        "type": "function"
        },
        {
        "anonymous": false,
        "inputs": [
        {
        "indexed": false,
        "name": "_y",
        "type": "uint256"
        },
        {
        "indexed": false,
        "name": "_m",
        "type": "uint256"
        },
        {
        "indexed": false,
        "name": "_i",
        "type": "string"
        },
        {
        "indexed": false,
        "name": "_a",
        "type": "uint256"
        },
        {
        "indexed": false,
        "name": "_d",
        "type": "string"
        },
        {
        "indexed": false,
        "name": "_comp",
        "type": "address"
        }
        ],
        "name": "NewEntry",
        "type": "event"
        }
    ];
    
    
    var bytecode = "0x606060405236156100565760e060020a60003504630c55699c811461005857806360fe47b114610061578063b30906d414610096578063d5a4664314610197578063eb8221f7146103d3578063f0ec9430146104be575b005b6104f060025481565b61005660043533600160a060020a03908116600090815260208190526040812060010154909116146100935760028190555b50565b61050260043560018054829081101561000257506000526006027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78201547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98301547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb840154929391927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88301927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa0190600160a060020a031686565b604080516020604435600481810135601f810184900484028501840190955284845261005694813594602480359593946064949293910191819084018382808284375050604080516020608435808b0135601f810183900483028401830190945283835297999835989760a497509195506024919091019350909150819084018382808284375094965050505050505033600160a060020a03166000908152602081905260409020600201547f636f6d7074726f6c6c6572000000000000000000000000000000000000000000141561076e577f078f074ebefbda136c770a838cfd4d3c87262380747dcb55d45e27a55cb781b985858585853360405180878152602001868152602001806020018581526020018060200184600160a060020a031681526020018381038352878181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156103165780820380516001836020036101000a031916815260200191505b508381038252858181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561036f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a16001805480820180835582818380158290116107755760008390526107759060069081027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690810191840201610833565b6040805160206004803580820135601f810184900484028501840190955284845261005694919360249390929184019190819084018382808284375094965050933593505060443591505060643533600160a060020a039081166000908152602081905260408120600101549091161461071257600160a060020a03831660009081526040812085518154828452602093849020929360026001831615610100026000190190921691909104601f9081018290048401939189019083901061071857805160ff19168380011785555b506106d69291505b8082111561074857600081556001016104aa565b6000602081905260043581526040902060018101546002820154600383015461062e9392600160a060020a0316919084565b60408051918252519081900360200190f35b604080518781526020810187905260608101859052600160a060020a03831660a082015260c09181018281528654600260018216156101000260001901909116049282018390529091608083019060e0840190889080156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b5050838103825285546002600182161561010002600019019091160480825260209190910190869080156106195780601f106105ee57610100808354040283529160200191610619565b820191906000526020600020905b8154815290600101906020018083116105fc57829003601f168201915b50509850505050505050505060405180910390f35b60408051600160a060020a0385166020820152908101839052606081018290526080808252855460026001821615610100026000190190911604908201819052819060a0820190879080156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b50509550505050505060405180910390f35b5050600160a060020a0383166000908152602081905260409020600181018054600160a060020a03191685179055600281018390556003018190555b50505050565b828001600101855582156104a2579182015b828111156104a257825182600050559160200191906001019061072a565b5090565b505060a091909101516005919091018054600160a060020a0319169091179055505b5050505050565b505050919090600052602060002090600602016000506040805160c081018252888152602081810189905291810187905260608101869052608081018590523360a08201528883556001838101899055875160028581018054600082815287902095979691959481161561010002600019011691909104601f908101829004840193918b01908390106108e057805160ff19168380011785555b506109109291506104aa565b5050600581018054600160a060020a03191690556001015b80821115610748576000808255600182810182905560028381018054848255909281161561010002600019011604601f8190106108a457505b50600382016000506000905560048201600050805460018160011615610100020316600290046000825580601f106108c2575061081b565b601f01602090049060005260206000209081019061086c91906104aa565b601f01602090049060005260206000209081019061081b91906104aa565b8280016001018555821561080f579182015b8281111561080f5782518260005055916020019190600101906108f2565b5050606082015181600301600050556080820151816004016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061097c57805160ff19168380011785555b5061074c9291506104aa565b82800160010185558215610970579182015b8281111561097057825182600050559160200191906001019061098e56";
    
    var address = "0x06b179aabf198ced0f98c8ceca905a920a137ef4";
    var comptroller = "0xdedb49385ad5b94a16f236a6890cf9e0b1e30392";
    
    var instance = web3.eth.contract(abi).at(address);
    
    console.log(instance);
    
    // Public API here
    return {
      abi : abi,
      bytecode : bytecode,
      address : address,
      newEntry : function(year, month, item, amount, denomination, comptrollerAddress){
        var comptroller = comptrollerAddress || comptroller;
        return $q(function(resolve, reject){
          instance.add(year, month, item, amount, denomination, {from: comptroller, gas: 1000000}, 
            function(error, txhash){
              if(error){reject(error)};
              resolve(txhash);
            })
        })
      },
      getEntries : function(period, index){ 
        // period will be YYYYMM format => for consolidated, just YYYY;
        // for now we'll use the index to test.
        return $q(function(resolve, reject){
          // 
          instance.entries.call(index, {from: comptroller}, function(error, entries){
            console.log(error);
            console.log(entries);
          });
          
        })
      }
    };
  });
